// Copyright (c) 2018-2019, The Arqma Network
// Copyright (c) 2014-2018, The Monero Project
//
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without modification, are
// permitted provided that the following conditions are met:
//
// 1. Redistributions of source code must retain the above copyright notice, this list of
//    conditions and the following disclaimer.
//
// 2. Redistributions in binary form must reproduce the above copyright notice, this list
//    of conditions and the following disclaimer in the documentation and/or other
//    materials provided with the distribution.
//
// 3. Neither the name of the copyright holder nor the names of its contributors may be
//    used to endorse or promote products derived from this software without specific
//    prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
// THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
// THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// Parts of this file are originally copyright (c) 2012-2013 The Cryptonote developers

#include "checkpoints.h"

#include "common/dns_utils.h"
#include "string_tools.h"
#include "storages/portable_storage_template_helper.h" // epee json include
#include "serialization/keyvalue_serialization.h"
#include <functional>
#include <vector>

using namespace epee;

#undef MORELO_DEFAULT_LOG_CATEGORY
#define MORELO_DEFAULT_LOG_CATEGORY "checkpoints"

namespace cryptonote
{
  /**
   * @brief struct for loading a checkpoint from json
   */
  struct t_hashline
  {
    uint64_t height; //!< the height of the checkpoint
    std::string hash; //!< the hash for the checkpoint
        BEGIN_KV_SERIALIZE_MAP()
          KV_SERIALIZE(height)
          KV_SERIALIZE(hash)
        END_KV_SERIALIZE_MAP()
  };

  /**
   * @brief struct for loading many checkpoints from json
   */
  struct t_hash_json {
    std::vector<t_hashline> hashlines; //!< the checkpoint lines from the file
        BEGIN_KV_SERIALIZE_MAP()
          KV_SERIALIZE(hashlines)
        END_KV_SERIALIZE_MAP()
  };

  //---------------------------------------------------------------------------
  checkpoints::checkpoints()
  {
  }
  //---------------------------------------------------------------------------
  bool checkpoints::add_checkpoint(uint64_t height, const std::string& hash_str)
  {
    crypto::hash h = crypto::null_hash;
    bool r = epee::string_tools::parse_tpod_from_hex_string(hash_str, h);
    CHECK_AND_ASSERT_MES(r, false, "Failed to parse checkpoint hash string into binary representation!");

    // return false if adding at a height we already have AND the hash is different
    if (m_points.count(height))
    {
      CHECK_AND_ASSERT_MES(h == m_points[height], false, "Checkpoint at given height already exists, and hash for new checkpoint was different!");
    }
    m_points[height] = h;
    return true;
  }
  //---------------------------------------------------------------------------
  bool checkpoints::is_in_checkpoint_zone(uint64_t height) const
  {
    return !m_points.empty() && (height <= (--m_points.end())->first);
  }
  //---------------------------------------------------------------------------
  bool checkpoints::check_block(uint64_t height, const crypto::hash& h, bool& is_a_checkpoint) const
  {
    auto it = m_points.find(height);
    is_a_checkpoint = it != m_points.end();
    if(!is_a_checkpoint)
      return true;

    if(it->second == h)
    {
      MINFO("CHECKPOINT PASSED FOR HEIGHT " << height << " " << h);
      return true;
    }else
    {
      MWARNING("CHECKPOINT FAILED FOR HEIGHT " << height << ". EXPECTED HASH: " << it->second << ", FETCHED HASH: " << h);
      return false;
    }
  }
  //---------------------------------------------------------------------------
  bool checkpoints::check_block(uint64_t height, const crypto::hash& h) const
  {
    bool ignored;
    return check_block(height, h, ignored);
  }
  //---------------------------------------------------------------------------
  //FIXME: is this the desired behavior?
  bool checkpoints::is_alternative_block_allowed(uint64_t blockchain_height, uint64_t block_height) const
  {
    if (0 == block_height)
      return false;

    auto it = m_points.upper_bound(blockchain_height);
    // Is blockchain_height before the first checkpoint?
    if (it == m_points.begin())
      return true;

    --it;
    uint64_t checkpoint_height = it->first;
    return checkpoint_height < block_height;
  }
  //---------------------------------------------------------------------------
  uint64_t checkpoints::get_max_height() const
  {
    if(m_points.empty())
      return 0;
    return m_points.rbegin()->first;
  }
  //---------------------------------------------------------------------------
  const std::map<uint64_t, crypto::hash>& checkpoints::get_points() const
  {
    return m_points;
  }

  bool checkpoints::check_for_conflicts(const checkpoints& other) const
  {
    for (auto& pt : other.get_points())
    {
      if (m_points.count(pt.first))
      {
        CHECK_AND_ASSERT_MES(pt.second == m_points.at(pt.first), false, "Checkpoint at given height already exists, and hash for new checkpoint was different!");
      }
    }
    return true;
  }

   bool checkpoints::init_default_checkpoints(network_type nettype)
  {
    if (nettype == TESTNET)
    {

      return true;
    }
    if (nettype == STAGENET)
    {
      return true;
    }

//checkpoints here
ADD_CHECKPOINT(0, "d12d2eb4b29c62cb9a16be4bb383636e7d6b320967ef74ddd381996148799477");
ADD_CHECKPOINT(2000, "a41db5720b3967e2b44926629053ad4ece169c83972df2ff80a7e2f31c8897a3");
ADD_CHECKPOINT(4000, "7b09da7bfa0b79b53f7ca5fc8e5a1b2a7ee3b73b4083efbb5289d8993f929569");
ADD_CHECKPOINT(6000, "3d7c9e1e1bcde1248618d2f7ed05d90f45032b3c67c27a15968500104c687662");
ADD_CHECKPOINT(8000, "68927a4cb667a04cf61351fb23131674126b173d75a107863b60beb03561945a");
ADD_CHECKPOINT(10000, "b50899ce2815a3c61c21333979aa8102d64bf83d564c1f87fb2c259f32563ebd");
ADD_CHECKPOINT(12000, "b28b5c4eb4f30f5354ca972314457a3f8e7778b724f39a96530ecc3f4bebc895");
ADD_CHECKPOINT(14000, "fdfc5f4b096fc84bbbf8459aa2577096eb123ba903c3dbc1b3a719d0be3d673a");
ADD_CHECKPOINT(16000, "4460950caeadf815a1638d106b45aa19e599e4ef09afb0b79ddd32b19053aeda");
ADD_CHECKPOINT(18000, "a9e32ec1ec81aa214086b3b6e7149423889915e0b8f7410e80604b978b8d2870");
ADD_CHECKPOINT(20000, "30255ce5cc82bc5172391dff9278f201a13f68f1e69109d2b2688eed36daa44e");
ADD_CHECKPOINT(22000, "4a0dbbd5b7a97059eedcdcecf5f5050f72d7ad231ea9f7d453c26e08af7eeed4");
ADD_CHECKPOINT(24000, "a59836232c15e044c7ac1486314f516d981e669851706c3fb49c609bdc0a5ef0");
ADD_CHECKPOINT(26000, "aa77d96b7efd20fec6b067bdf2459554b6252b4bebf72416d470c7df0d73ff9f");
ADD_CHECKPOINT(28000, "8017c9374bb6b563b0705c7eced01a7fc961232a8691f1f2f94a9aa70c4d36ce");
ADD_CHECKPOINT(30000, "bceb662a35f1f8dd8d842b79de93165b642b05c2771ada9fbe480f73694d3080");
ADD_CHECKPOINT(32000, "45e3a4f3a3934d795aecb10aac7f290dd8f236c1b9e1a0252a270dfbd70ab0a5");
ADD_CHECKPOINT(34000, "678dda4dad1a905d0bacd636ef7f302c88d763017f79aa533b99994ada5ee199");
ADD_CHECKPOINT(36000, "5538052409a3d63ea207268c84fb3b8d6ea5d2b5ad4465023c13d5858dc2254f");
ADD_CHECKPOINT(38000, "863fce29fa5cfb3878f42af917dfdcc510668b0f98b56d433e08e15ffc29acae");
ADD_CHECKPOINT(40000, "cd1241b22b42a00bdfff5ce9f43b55886b8ae3e234fd731feabb5f02859128c0");
ADD_CHECKPOINT(42000, "cef853608317da56b541ae845b79364b1a1332366a7f7cccded8b7df18969544");
ADD_CHECKPOINT(44000, "105f7d0b2f87dd7804c1cba1d99f527cd26427ca1e7a9f338148840826ea4d0b");
ADD_CHECKPOINT(46000, "050b8c8f031ff9c619760455920444c8ca410b3d39d6aa6297ec095521ab638f");
ADD_CHECKPOINT(48000, "0f1a03d600005c6c5390f0bb55605fa178c95fded2c3eeb22a5847b6c025698b");
ADD_CHECKPOINT(50000, "deef740cfe34df6b6802e37c5f962783d5f1567a8b5cd061149728e8f9ab16f2");
ADD_CHECKPOINT(52000, "c374e1740d42e9bddc059d0015405abbf5a956160f74ed864cdeed6ebfd61cfb");
ADD_CHECKPOINT(54000, "3b30b08a558f48a12b47fdfcd0f103fb225d166e0ceb3a42abecd7042f520f19");
ADD_CHECKPOINT(56000, "0db4c3f17ee46c4b7473f4999aaeaaf7db427f6e11a16fe517b324516ae33cdd");
ADD_CHECKPOINT(58000, "e287da0a403cc2ab7586ab7f47b8bfee6a6f6efc57b25b45bc8e64614c4c6b83");
ADD_CHECKPOINT(60000, "00332ed95643f342f3aca2deaa88d72a9dd20a4dc0c40ae5971d5a8c172d2adb");
ADD_CHECKPOINT(62000, "09bba164e23bc3246b590ac9d5c3f1da77d97b9960e22a0775f3ba187cd2d6ed");
ADD_CHECKPOINT(64000, "cef5bad1ebb1a331af67d5d3ffb82eec19f723f621493dba9f2b67b6235e5071");
ADD_CHECKPOINT(66000, "125c11a6b14a6c53610bcac203869415702d2af6d4b9d8a7076492d9b9bf2302");
ADD_CHECKPOINT(68000, "de6c741b77465690c6def34eff08a3e53a43a092f52094a658362648f051aa67");
ADD_CHECKPOINT(70000, "6e4cdf1403baa51271123d91003dcb9fe1f13e76fe7bcbc2466b28a1dd294485");
ADD_CHECKPOINT(72000, "71ea1f64c32bfea5ddbe587827f4baaff4428cb74bb24a4d4cafb556f09b0422");
ADD_CHECKPOINT(74000, "b6b19effe99df81503333b67d2adc14e5b8ede804d3f4e4ffc54275e03c16103");
ADD_CHECKPOINT(76000, "136e141522fdd707790fb61f5e64c88ea8a87b495cedc5c91bee1baf3fd9c335");
ADD_CHECKPOINT(78000, "b66cd77e78ea1f0e9100802d35c41843b66352709f5a6e790fb64dfc4ea34805");
ADD_CHECKPOINT(80000, "fc0894fabeba592e481a81ee7d9d8178943fb38d1ea09e156f3bf9eee9313e6f");
ADD_CHECKPOINT(82000, "5e8e50ee9c642d77b9594b3fbbb9254f68c4022ac3c75ee5a4f4094101543a84");
ADD_CHECKPOINT(84000, "9716cdc9fcb323d8e5a016bb0bd62cdd6fdea84b38a2ba636ca9f739122f1f6f");
ADD_CHECKPOINT(86000, "f3e09ae3a9c90a7edb8ad963644a96f80b38e4c656f30edc13bdcbb493b204d8");
ADD_CHECKPOINT(88000, "cce48663fb3627abcb261a28adcd802ab628fd4f4445d69cf82f581598ec5bc3");
ADD_CHECKPOINT(90000, "188018368d93ba683c50646d30bea06dd047a0df52f05a9c09bb4915ef2432b0");
ADD_CHECKPOINT(92000, "94206d317ce85adccceec5c581e34bd91804d046c2afcacf41b85928b7d9154a");
ADD_CHECKPOINT(94000, "1b771ad498ca278c0418dde7bb7101cef749cda470812cbdbe759c4b9fb3a064");
ADD_CHECKPOINT(96000, "a0554af75c76f0dffe5ff927c7beefaafa3359da238d4bf610e0af771ac02a6d");
ADD_CHECKPOINT(98000, "fff0f61a474183908226d1bd1dee73d0673337a3746e7e156b8a300606498875");
ADD_CHECKPOINT(100000, "eaf4a24951ce31ebfb58caf03a3b2868adeeb0b47b9b7a843bc7b4c7c7dee23b");
ADD_CHECKPOINT(102000, "4a561d7741b7d891b811d4680643a6624af8e131540afadcde5b9d45f123951e");
ADD_CHECKPOINT(104000, "5e8984b7ba0c3201a233babaf6431ecbffa7696f8353d1e67b391ee79a1169e5");
ADD_CHECKPOINT(106000, "4c1215450a5f0d5061548cfff365662ddf6ece3e43da79e4e5a4edc1e9f9ca6c");
ADD_CHECKPOINT(108000, "4b1cd5674ec5fb4dd30e2d4ce159df9406a87fa308fa6431b40265207cd430eb");
ADD_CHECKPOINT(110000, "d98fac4ceecb675191a3d5c7d372d9040d75b77a7e1650ffb06edc9b633d8acb");
ADD_CHECKPOINT(112000, "93b0d19a80c0a9eb0716dc20e294429b1e8ea4699aa72716dece7a47a695df4c");
ADD_CHECKPOINT(114000, "7e044c375363bd1547cd03c51164161463513f612551511f1f8d2656948a67c1");
ADD_CHECKPOINT(116000, "c57b699aaee353d7402bcc532a11587e4e25b8bb98670663265d957cd5166476");
ADD_CHECKPOINT(118000, "64649b6ae7dc5088151f90379fdbf187ed8f2f696b58aad09fd295de4434ea67");
ADD_CHECKPOINT(120000, "3b8189e629372081d3f1c4433b0f5dce37d9515423349f5278108125c1d3a097");
ADD_CHECKPOINT(122000, "9f93a75e63849a371fd7916a8ad6fd85be119015504c99222c07dcd5400bef28");
ADD_CHECKPOINT(124000, "5d6463405c9abb21cc0a66c82f3aea6256c06293e0bda3e737f4ead1b496cb8c");
ADD_CHECKPOINT(126000, "2c2a3fe7122e63ca0f246f28f4f5b84d01cb6c69c0b4753e75e620917d92779c");
ADD_CHECKPOINT(128000, "a95ce93cc2cdadc89206f9b3110d0b6e0fa325218384a666e115fd94f3c86ace");
ADD_CHECKPOINT(130000, "ccbcae4b030798185e510590740c959bbcf61db49a2cec58b01b3cf985896f41");
ADD_CHECKPOINT(132000, "4369056261fc68c5563cd7e12b52a39370fa03442c6105c26459f1a6172be66f");
ADD_CHECKPOINT(134000, "e0c94d36b7e817a0ff6041e70723c7d78e39889fb3027132d29cd2a5ddf24274");
ADD_CHECKPOINT(136000, "eb5b0bfc6225156935325be8fce10d9f1299d134bb70b84b0fc0c84daea11e75");
ADD_CHECKPOINT(138000, "5f3483d87ee2d834278ac1fc4ca95e3a0bef379a13dfa2e427c32efc4c9f107a");
ADD_CHECKPOINT(140000, "e9e7a30ec068069b046a2b12aa5af0b131a0e6e54efba51ff71edfcf535a6917");
ADD_CHECKPOINT(142000, "e03b458fc14ee44960548efd2b6ed470d63eaebdba4f9b38209723f98ec87192");
ADD_CHECKPOINT(144000, "f6a1c9d8deb21985c1242b6274089626f518352a71bafc53abcd1aa2abb66277");
ADD_CHECKPOINT(146000, "ab489617a2b1e2fb19df94c3c5f305a5412b072ae9a56b03693837ca13bcf102");
ADD_CHECKPOINT(148000, "1787a5c7090b39d10ea3441733534f63e69f7b67512497e6aa4886a9c69d694d");
ADD_CHECKPOINT(150000, "e004c5ffc50b2ae7f62063c12c03f5f6f3c49528d3b64425b7e47464513b2458");
ADD_CHECKPOINT(152000, "c756e5ed8a24b1d78f0169a22d46197dc0cc4088a09f6ed82f4e97208696b6e3");
ADD_CHECKPOINT(154000, "40dda1259eacbcff68d19bd9cbb9d1724b9f914255827c59a12217666b02a16d");
ADD_CHECKPOINT(156000, "9c720da08677d63efe0554f78d43294610e2a02dcead0167d4a336ede844f3e7");
ADD_CHECKPOINT(158000, "c5f91ae5b7d6ef98afd3fa3eda6dd6cc850365c97584c095473da468f50a23f6");
ADD_CHECKPOINT(160000, "c243f944d8bd7534bfabdfe68eee8b0e0f625661138652ead10dc06203f68eed");
ADD_CHECKPOINT(162000, "3a63600b3b273bfc957609ebcceb8d619b5f57f585777ebb54ed745173a8ae42");
ADD_CHECKPOINT(164000, "61809551c4f9da675b0e6b056c52412e5b31cc3c4b2b231ab780e1834aa1e85e");
ADD_CHECKPOINT(166000, "8e91bbc60e2da744f69f15e740da4c617b2d4ab099a1bdb1a2816e3cb8446c1d");
ADD_CHECKPOINT(168000, "3bb024c0032057e71a6d70878408370de31c4cab1b726bbcbd69bb282f053f6d");
ADD_CHECKPOINT(170000, "5fe68c165a138a003706d361a0dc888918968dbc95dbbfb8ed55cb1bbd2a33ae");
ADD_CHECKPOINT(172000, "a15bd1ce519d0a32f5a8f079113828ab198df2a9d6c6b46155a07b6ba72b1e06");
ADD_CHECKPOINT(174000, "d8721cbd1b519206ae264b0c77ce956ce0d66e8df9a23edb14495e88864249f4");
ADD_CHECKPOINT(176000, "c744f3a327e010aeffee7c0a05037067a8add684473414dc74253c95b595dff4");
ADD_CHECKPOINT(178000, "cf892886741317806af2063f1a8fff7f66525482127cdbe9146736f32c12b71d");
ADD_CHECKPOINT(180000, "560077033bfb00fb2dcb4dc5610b74012aaac5bf1717c0921c4eeb8531d466ae");
ADD_CHECKPOINT(182000, "53c02b40792cd03f1b2b00b5a31c217718fba8e222e92cdc0e430a4e958d3efb");
ADD_CHECKPOINT(184000, "3ff59cda60c2d54bb0e3533190e6d683be7a143223abc5b7d0dfe6a3bf458836");
ADD_CHECKPOINT(186000, "18b75b75c67249599474b3ab82389b2a7f6beb118fe885f76dd02ee08c8a5875");
ADD_CHECKPOINT(188000, "4952474d2dfbf19617bf255dd929b22981a9318e5e13d0eef00f20df1ebcfa31");
ADD_CHECKPOINT(190000, "8f407475575690f79cee14814e415a8bda7c8c1230278f4771684703436da0a7");
ADD_CHECKPOINT(192000, "9d4bb72401abd78563b02606c5a4d1cc5db85487cd1f2193cf66d5e1e4d22943");
ADD_CHECKPOINT(194000, "775bca7708d15fb79bf3541a5ad60ff900dfc495b367779e5260828a13216b47");
ADD_CHECKPOINT(196000, "957b84af11de334e79731e1dc50ee998ea2f53edba0b306e452f06a4c662aff8");
ADD_CHECKPOINT(198000, "3bacb2def18515cd286ba11a15cd9795c0eec791027994675333c8f48f354b05");
ADD_CHECKPOINT(200000, "eee78b00e7390b5ae0011a02e5fb28363667256e80ed9533e15aedfccbcbacba");
ADD_CHECKPOINT(202000, "34f421cc8ccdff9cdb83edc90a39149f4024828461ef5da01d77774ea9fb5b9d");
ADD_CHECKPOINT(204000, "6fd2ee00d82ce4cc7d5a1deb4ad319b6497e974f2635d06c255c9894db9a127f");
ADD_CHECKPOINT(206000, "98733648edc15ec322829956460b27e374b37380c62d2817163ca97866ff3c7a");
ADD_CHECKPOINT(208000, "b72eef92da92eb70a58f8dbbc831dbc7e9aa55439e14c86a5d4585733be38e5e");
ADD_CHECKPOINT(210000, "d984f36caeafaf7280c0ae1a47d39bf2427e7427e0220dbfe43234f100a80544");
ADD_CHECKPOINT(212000, "37e1ec654b1bb2b576fd26d92fc182a41a844eb9db607d4a52be77a0785ff603");
ADD_CHECKPOINT(214000, "da8fcfb122e3cde50f30cc073bef0b9571c363ed50e69b5370d520870fea422f");
ADD_CHECKPOINT(216000, "709992409af88ac4c9fadcca622a8a3bb429caddc52cdda4a9d3cf7a80b25f62");
ADD_CHECKPOINT(218000, "be4d5d450fb65c428aa2941bc8238d02b314f91183d2f97cb2207b0127b14f92");
ADD_CHECKPOINT(220000, "ab3c5b6c4a94e9955e03019714404a68503eedc83c181f42528f1df23a7a6c28");
ADD_CHECKPOINT(222000, "fda85b8a7764b8e5478e0f451dea1b1dad4b398202437e976f87ceda849558f0");
ADD_CHECKPOINT(224000, "c7fb9adbdfc3f5ce54846847626cf72d1551f32a311bc5a46062d3a88f9d130d");
ADD_CHECKPOINT(226000, "bbf1bd2fb527dafb74c632dcda550f704d29f2ac12f372bf7c1f71a5b7dedeb7");
ADD_CHECKPOINT(228000, "e24093f5c57b98014d69cc1ccda187800bf8ace14e050459a4e0e1ffd8d736aa");
ADD_CHECKPOINT(230000, "f515ef738f9a77dbdd8594c39194f5c030f484920903d0bf2439c396bcf2ac5a");
ADD_CHECKPOINT(232000, "bc41ec3e722f02bf1de1aa9b7838e614ab551d1be54838c32138a3fe79ec411e");
ADD_CHECKPOINT(234000, "8971d6727f53756c0282787be086ee0d03854d12993324cb4a4728242fbd03e7");
ADD_CHECKPOINT(236000, "7e3d4584a45878d41722002ea1b3293f59b5132fb2c45b136e6ccb16a7afc88a");
ADD_CHECKPOINT(238000, "47b5dfb23804605edc70b5f2703434f086d8ac0bbd687511294f624c2f465bcc");
ADD_CHECKPOINT(240000, "40cf95ea6466d10fc4464c82aeb2482d627f4ffc00448dff18715e29cd4690d6");
ADD_CHECKPOINT(242000, "651c4d5a3f7d1205da5532725431b2dfa2160eae996579ecaaae7418ef1df553");
ADD_CHECKPOINT(244000, "3116d09d6b77eab0af2f42ecdf4e9d81e6ba73e486103f6a4e0c8d3727fdd03f");
ADD_CHECKPOINT(246000, "7dd7373bec1b3316b0f5e16879c43bce01e5a4328dc5e119396eb01d77b61c3a");
ADD_CHECKPOINT(248000, "0acc149dbcad677b5933a0d366c0ad43633ec438395f38ba63c760f41c3432d8");
ADD_CHECKPOINT(250000, "f1e07590561690383e70bd2cec21439701a18eaaeee50604ae4c232f9fd0a7e6");
ADD_CHECKPOINT(252000, "49f501a82de410d79bd080a1b6a318301a9aca776599a3b9014292622b4e9f85");
ADD_CHECKPOINT(254000, "5d2073f260ba8910e4f5408dabdd3bd39152be7a1cf4047a8b96b42aa2c2788c");
ADD_CHECKPOINT(256000, "ca400a6c62c3fb8998868c85e3a187ab74a90c089d7e7c469b7e63890b581844");
ADD_CHECKPOINT(258000, "4c7cf5b210b9094ed094d44eb7ec42e534046a690912a8884d9678c67138ae0c");
ADD_CHECKPOINT(260000, "39a26e7b195197928604636648c843e402675b21bd56daabb966257d91b2cbb4");
ADD_CHECKPOINT(262000, "af61fde30d33354be0f0ef9c8049fb44867b45db49f0468e01506ad223e1bff0");
ADD_CHECKPOINT(264000, "78110e2983b65908b25d463820e126a86cba9b2d8d5926caa81e68463e099c0d");
ADD_CHECKPOINT(266000, "c9259df16152eae308435758f7cc64b352df23d0442caf6288c4aa5fa5b4b980");
ADD_CHECKPOINT(268000, "6566f1e27664eee7d0da71c46fd5ae39e87617d77b24420a0da2e49f03026de2");
ADD_CHECKPOINT(270000, "7959fc3be468a2b1976215178b19331ed04b26678caa83841c62cc9c6b0ec777");
ADD_CHECKPOINT(272000, "52782b4bab73a2fa294e1a01e2184e4d24316c1f2c480be08e3853da63436b57");
ADD_CHECKPOINT(274000, "8c03374a9f5dae958a64de59b02ed4865d0da301590f3ff81f1bd2314904015d");
ADD_CHECKPOINT(276000, "56b5e48f832b095734439084459a37312e6bb32f1f0bc4f27282a8c35e0cc89e");
ADD_CHECKPOINT(278000, "4e464a6728ba40c6fb04873591562042a8c8d91fa340c5a73a342b865e785340");
ADD_CHECKPOINT(280000, "c9f1b55467c093d28cca0cd4ef1f02d98fd14ddc5118592e6e3eb5777eaa8ee3");
ADD_CHECKPOINT(282000, "4b2cefa0ee81cd8e4d85f217b3a3d3ec79dcdb9003f993520e06b6ca987815e5");
ADD_CHECKPOINT(284000, "ed7a30b8e0d1aa04ecd23ba8a49c9a8890f09753504c8e9cbb01fd08851803cc");
ADD_CHECKPOINT(286000, "6f08269004755a0a3157dc75fd2afbeec45f05d3738f336470edee4e34d21c21");
ADD_CHECKPOINT(288000, "6d2bbe3f170001ff54962ea7ad7edf39e5b4c31f76fd81feede6a99d6ab27882");
ADD_CHECKPOINT(290000, "02c2c028e173b43dc00c316b6d752aceb715dea92481e923cff0049a11ab67bb");
ADD_CHECKPOINT(292000, "d27c75deae0736f7837bc22118d1138f7dbaee2d01bc71e3ad1b725eda0181a0");
ADD_CHECKPOINT(294000, "15f011eb3a3c2b1259e126da8c778d5e8e306c828ac3eece2256061c05566ebb");
ADD_CHECKPOINT(296000, "3d336d16beb99d734802c512a494356e0fcd90e434a3a3235a8a11941ed65b10");
ADD_CHECKPOINT(298000, "0252297b6691cfbf1e2d71296875af323b60d7eec2a2b8d08e1f20877869689c");
ADD_CHECKPOINT(300000, "a8b38952cbfd3d80ef7bc0c746850d7cb3f82c1d13058d7a9c01a12f025e0620");
ADD_CHECKPOINT(302000, "65fc3821ab4710ce1bb1b1d59b3d51050c775d7facc9a6a47ed8e7daaed3f13a");
ADD_CHECKPOINT(304000, "ce1c7a8d952e01d4cb78fdf53922f35c009c9408d1d1bbfdcce366843b94d84e");
ADD_CHECKPOINT(306000, "c29edd06052d124be0cb861ff94b652f475a49afb50e9ec54bf77b6a1718eb56");
ADD_CHECKPOINT(308000, "5b9151e6087eb10b4666a49a5a8841020cc877b19739c9e598548544416ce267");
ADD_CHECKPOINT(310000, "526d4080d7f1e823ba11fda983c85b9524b35a19f9c6409f6af0b25c8c60a330");
ADD_CHECKPOINT(312000, "6fa5f9737d8b442897ce85e7118f5e9ac163ada78b18a94de481fb5af8b4ab66");
ADD_CHECKPOINT(314000, "fc68580c90b0521b59c8122d88b1aed39181c4685c76fb8e6fe0dd2629a2f66b");
ADD_CHECKPOINT(316000, "d47b815085ac464bc1f0e250c9f23ef9a3ab7f18660c48e5e22c034c2a481454");
ADD_CHECKPOINT(318000, "36bf7b6cf549056e601f6f861ee8feaafc171bba7d9cd6b24d6612b9701c18ec");
ADD_CHECKPOINT(320000, "8fb333e41c649e4717cc45a4ee738722e4160224a0870a7aa628019709d09f86");
ADD_CHECKPOINT(322000, "4e50ebd39a4c1e477b99b1c844f6ecc725ed16f2c70c0c5122a16156430b2e66");
ADD_CHECKPOINT(324000, "1cef9c57f003fa038d690c8abcae6a07c44f608d563e93ce24762d464ce51464");
ADD_CHECKPOINT(326000, "cb8ee9f1e5fa47e3386929bbc08972f74f948b73bd22f9dc17bfa9e60a159333");
ADD_CHECKPOINT(328000, "6373cee03983fba9a77afcf74e6e96eda47c38af491ca20770bdada564d99678");
ADD_CHECKPOINT(330000, "abbb2151b7fc42d157e280b12085a6e43bff47e9d3f229a8a16423cd10a70f66");
ADD_CHECKPOINT(332000, "545494368e9374b1e22ad128edb73208304d55a950767a38910abcd8795fb738");
ADD_CHECKPOINT(334000, "34efa27c5d6f548ff1d300a2f7855e4bc8e7bf20ccd1e7caa8a0d0829d62bec5");
ADD_CHECKPOINT(336000, "f8d0e5f10d22347892896de44a32f77250105b47ef8de437a70ae0554911a44a");
ADD_CHECKPOINT(338000, "2f07d364944555f820b805f571352935ace054290245b4d198c210d3abfbd342");
ADD_CHECKPOINT(340000, "47ae57c339e5dc3009d707badb72ecf909c14c252a9256be5f7d6ef6510762de");
ADD_CHECKPOINT(342000, "2acf1e155a3d58090f5dfbf51fdb37f9fd91f9197e00bda842828abc4a411baf");
ADD_CHECKPOINT(344000, "f5fcfe624d58077c4cfe91bb77ec0fe3e532e680eaf3f75a778d487be66cd75c");
ADD_CHECKPOINT(346000, "2e3868211673a5983d4eac1bc9ec22aa2c02c932a60018f58e55f48a6c3e1a48");
ADD_CHECKPOINT(348000, "1dedcf1459da17e17fb1306d6cc12b28918dc36ede27f8c2340e5bbeb87b6dab");
ADD_CHECKPOINT(350000, "7b508e62ce7d92e9ae80f5a560c5da19a14c8764588c7a1fe6e1f227d1d2033e");
ADD_CHECKPOINT(352000, "11cbb7119c4c5e5010167e4a69106c893501d981fae6aeca3ac72cc324bb0913");
ADD_CHECKPOINT(354000, "ab662fc5aa7d8b3d3bd1eb78f446a4549e635be1f361d0cd59a880826d7d9fcb");
ADD_CHECKPOINT(356000, "089d8fac916abbade714430ef67da68516a585dcf6ff253b0ba10ab8ce2869b4");
ADD_CHECKPOINT(358000, "1507b59d42081569cffc57c73646ca0ac50367c65849e426cf6ffb8b4a14c048");
ADD_CHECKPOINT(360000, "66fd4c2cb6115014cf4391e27f224d64e4606f82470ff7495095c56ed20feca2");
ADD_CHECKPOINT(362000, "ef0c4c7134f458fb8e67ad78254fc2d47dbb73bf5421ac56062a6e251c360201");
ADD_CHECKPOINT(364000, "f0c6ad4e1c04ae25e7d2c302177c56a0ec5dc4a5bcc637b66bb8d37cded3059d");
ADD_CHECKPOINT(366000, "d79a429546dda26f89af5dac0dd8349b5471541325d2027260767d8118d415fc");
ADD_CHECKPOINT(368000, "5f8b6d6bae3bf6b69ae50649f61480acc677b8749199d01b25e70ec7ef8baced");
ADD_CHECKPOINT(370000, "29384daa9e95a667085df3f1055b2de32b786e5652367808ba03c916fd4d3301");
ADD_CHECKPOINT(372000, "b199543134454dfe5c573a619fad33c407eacc15fedf294081ba74e43287c869");
ADD_CHECKPOINT(374000, "be474afb7a68a27e21f553731a48026b5e8b2fa0c900acf222d3cc6fac3e02d3");
ADD_CHECKPOINT(376000, "7bd100ad28b2e7d50bd777a495a979a4dc389839ae83bd89fa1b12d804d82399");
ADD_CHECKPOINT(378000, "129b9191af9a5bd36ce4504ca0ecbc98586df5bd77a793d2b4914cf88ed6b5aa");
ADD_CHECKPOINT(380000, "3d9309984dd49477cffb3c1d85b16051bc5440860b6a022eaa596f7d494ae7ca");
ADD_CHECKPOINT(382000, "732041c8e4234657544ad58598961cca2cde40038d931732b0c0e9a8981a6025");
ADD_CHECKPOINT(384000, "e9144d5370c39093fb26666aa1b6aa6386b09fbc6c7f42326274efa5f05f3c2c");
ADD_CHECKPOINT(386000, "f1f25b7ffc847a3a3104babec11d101d886e6751e13e200d8eb89736ef933250");
ADD_CHECKPOINT(388000, "00963f1f2dccd23feac77f0074195b1aa145d4a2d1278229253443d6ae20ec64");
ADD_CHECKPOINT(390000, "36f2a47bead876a83adf8ca781b29ecdece0dec0d80d7e08887bd136be87d6c6");
ADD_CHECKPOINT(392000, "655c411b6d04097072ec600e2bfda2b2791792f2037f50ff425b74c05c0102e8");
ADD_CHECKPOINT(394000, "bf7f54454fab4f7f45069b3acc48521f2b4b66986294bde9270c7ce6d7e38c8e");
ADD_CHECKPOINT(396000, "23d62188460ba58db4702fe09b3bd186b0841b7ba4552ac716fffd5b48501556");
ADD_CHECKPOINT(398000, "f63ed40f0bbccd1a90914534d324fea117be58034110245e6883fe9bf3e4641a");
ADD_CHECKPOINT(400000, "3041ce3420913bd02e36f31bffef469b75b75587a4a311d1792d626817efc281");
ADD_CHECKPOINT(402000, "92b25936077ee7177b5de9c40008a119d82b2f0d052f45479a2585d72d50737e");
ADD_CHECKPOINT(404000, "a151600ad8f4670ccccef309af0ec7508bdeb5383cce27b6cb9c9d51e2d71cad");
ADD_CHECKPOINT(406000, "8414d20a27cc206fabee78d266679d47ee4247b9d5e4630ea675e6cad57be308");
ADD_CHECKPOINT(408000, "c09b075f21a63d144f522e690c451276552f172408ad6c8f8cf5e32d9db153a1");
ADD_CHECKPOINT(410000, "28e2c80c2183a6f0a86e1edd64dd8379ff37f82c7f2e30ab6cdac4fa9292aebb");
ADD_CHECKPOINT(412000, "5e80b1130cc969ad5f8ee3cd293ddfdd3ff644dbb3198fdf831c212292357b73");
ADD_CHECKPOINT(414000, "c020a16e5ba4b118eb1c4527153954e3d47a61e2fb88d089368411e4d871168e");
ADD_CHECKPOINT(416000, "191c7d81568d57b05ed8d872dd77a729aee05bcafbd2fc60ff667a4d537ae331");
ADD_CHECKPOINT(418000, "d7947f8ad8a160826b73ce400cd7fbad30117dfd59010b643b3475af719c0018");
ADD_CHECKPOINT(420000, "41f85891f2cd3d53b2f0b9467aa5f8cbc8ea2c9577a7c25fbebd4acd35350a19");
ADD_CHECKPOINT(422000, "2c15cc8c93ff6b5468ddd10705163648135a1036b3e24855b1bedf56aed77f81");
ADD_CHECKPOINT(424000, "f1aa1b9e3025b45ff32068f6bd30a475f107afb0e2020e0f603ec8e8141d3225");
ADD_CHECKPOINT(426000, "045358b2c7eed919a747656059db160cc9a6fba800ab5d975a54b0803bb19311");
ADD_CHECKPOINT(428000, "a550a92c02e2282810a7723dd899d54ca5b2c416ec8edf813b2781d7f7a93fdd");
ADD_CHECKPOINT(430000, "f213a998337739ef6111a001d884ebb97711910cc05f62e8f8c7c74e2ade7399");
ADD_CHECKPOINT(432000, "2f70291641e2120bcb0d5bb76eb9ac13e6821567a74abb38cb8b25c16b2b208c");
ADD_CHECKPOINT(434000, "7ea19a6379d753772580319571b7f66cafe286745910c0edc7bacfe8a7f18f5a");
ADD_CHECKPOINT(436000, "5ad771e156f2127f25bcfc2e42e4058f4ecbc0a39faf8fd0c5c934a0917a2d25");
ADD_CHECKPOINT(438000, "434afe9d02a100ccba1f677b3c7365eceb04213eaef4a4b774e7a0072698ae97");
ADD_CHECKPOINT(440000, "ec95756107674043640490626cefc148a8a0d0990a1febcc9e025ba33a736527");
ADD_CHECKPOINT(442000, "8986078a739b11bfc1f7e9b097941c1a10bfa06a2e6db45ff1a70823c3475e3f");
ADD_CHECKPOINT(444000, "3c57e797d3615d92537f43d0f364a34bd38647bb9019155b167ab09a612031c1");
ADD_CHECKPOINT(446000, "cd2dfca44939495eae91468f961f8e21cf72c342118c8f3a5e21f0644d87adf5");
ADD_CHECKPOINT(448000, "6213e9f19b5b15499fc9589d7fade107c8380c88892a297fa043ebb79ee24636");
ADD_CHECKPOINT(450000, "360377fa7ea7fb1570b233647fab0399a8bd745474d07929296197e602864d26");
ADD_CHECKPOINT(452000, "9d911511369fabffbaf017e074fd6c373890b36b603ee3934b8951341c153102");
ADD_CHECKPOINT(454000, "c5a776ab090bf94aa6b8239e2f5d64e239f5ee66be0ab532165f47902ecb06e5");
ADD_CHECKPOINT(456000, "4affefb7771c97da931ab1160c1f6f56a16973f0a2c544230bfc237867013604");
ADD_CHECKPOINT(458000, "937aa725efad7b892fd57dfce56043a5907053227c77029021e4f84c7c64f281");
ADD_CHECKPOINT(460000, "7dcd1fd551b144826c26f09d514425fc31f78560f57ad54a48bfdb461f4c9111");
ADD_CHECKPOINT(462000, "868a67d9571b1c79299ebe26ba31cb9ab2fc57f44935df47ecae3b7812c91dc1");
ADD_CHECKPOINT(464000, "bea635f0fd46f873c6f19e2fb33240951540aae66f939c3f0a1f8dd612836ed5");
ADD_CHECKPOINT(466000, "51f746475c9e8391aad83c84ed0132b94280930ac21e35bcf022d18a8277853c");
ADD_CHECKPOINT(468000, "b40530488d86922471d6e06a2fa5cf384b1924a8e5f1dea503eee173142670f7");
ADD_CHECKPOINT(470000, "81fe819f05372883ce9f367997244a296302340faa5ddbc67504516b1e520342");
ADD_CHECKPOINT(472000, "5d9c25f1031c5f776049675d29ef6da3e86c8acfa32ae2e2397998ea2d1a547f");
ADD_CHECKPOINT(474000, "db5bcd422ee0bb5b4ec0f62e3ace5a7d65a2d949ca56b629777a07bcbf273c40");
ADD_CHECKPOINT(476000, "6d4039e498a036a5bbe5809a4b63822dabece9b85a7db4f5cc3421d3f29a5290");
ADD_CHECKPOINT(478000, "4239119369b24d54e296bbbd373d1ca33bfc93e9fa01070d407aaa6059552d1d");
ADD_CHECKPOINT(480000, "2de2e8e9b2d7765fcd6888ff393a46b875bfbc86b8099bd40a31afdb9d1c9f93");
ADD_CHECKPOINT(482000, "c6d2cf0ceeae81ee1b97f5f8d72989e89601afa8244e08a55eb2c3d03286f827");
ADD_CHECKPOINT(484000, "1c3e783b72ca561b066907dd37e296b9398602408520f0606eba17f441cad11f");
ADD_CHECKPOINT(486000, "3a9fe5d5174a5404d9730174a21bd18181e0e4fde8bf64d36729f29d99395ee7");
ADD_CHECKPOINT(488000, "0fb4cefdc0f81f2ef184f0e07d4af80e63dec6bd5f12c4740cc70035b3b26f29");
ADD_CHECKPOINT(490000, "996c78adb4fe00e722749c5acaa77a30983f3c7bbb3348b67c98ecb711ce93f1");
ADD_CHECKPOINT(492000, "c8f3540e82763821e066f31e1ef8d82f434210a89ca59b0265f3d487cb80b087");
ADD_CHECKPOINT(494000, "0e121d617809a6eada49cd797ae837e6fb0672bc8a6ad58045f5a68fd0f4a3ed");
ADD_CHECKPOINT(496000, "d3b28353e9f9555ff4cd447f3a528a1a5011f53ea75dfebd5b9ae739fe35497a");
ADD_CHECKPOINT(498000, "b66d96ea502d615e5121a66f5b12a48a6ce5bfa8fffb0fcf9ee5087fb8bb3110");
ADD_CHECKPOINT(500000, "a1a445998347a3b687784c8771058dca704fcbf3ac809707e54266d4e41591e5");
ADD_CHECKPOINT(502000, "09f9461875db8fea60a7cc8caf75d8200c3751c58f2d8cbe43875d88dee024be");
ADD_CHECKPOINT(504000, "c633e19b36ffcd58d020011ba38f900eb2af197d41be9047757e26cfba42b943");
ADD_CHECKPOINT(506000, "81b6b9850555e49d87b3b31b400626257bfd7b38411e29b8023d64a3a1fa8609");
ADD_CHECKPOINT(508000, "5eae6ed09f5c30bc46b11697af0d305164966a0bd8f8a2e028d2d8ed415407cf");
ADD_CHECKPOINT(510000, "9253653ffedd611e2d5ffc5067a8ca2c69be7cc4a2978bc93c242f61bedb9c21");
ADD_CHECKPOINT(512000, "cff997fa31f8a09330babcc832a6e72ff17938b49bb0bff94ad94fa566da994b");
ADD_CHECKPOINT(514000, "ff3cf8c91f4e34fb0cf1829596ad285eec3f0a68380c30ffdc3e2208b3762b00");
ADD_CHECKPOINT(516000, "d8447ce7017a3171d858104e992c58494f9c3e643fe89b4715508ca8d865c029");
ADD_CHECKPOINT(518000, "7158ebaec636c00b87277ef6f4822724312989fdad822cc00df9d6aa1201d9c2");
ADD_CHECKPOINT(520000, "f7defa3cd6856c3cc4202107a4dafca7d493d06d5897b80a0c8f9a4903bd591c");
ADD_CHECKPOINT(522000, "b593d43bead6ef6e854e7d42cefe1a16cc9b08bceb549be2b9831929548500b0");
ADD_CHECKPOINT(524000, "fe7559d817750a4dbbfdd3d2a99eaa15d0548a274976e948bba1ea1b86d2469f");
ADD_CHECKPOINT(526000, "f84181266736676c5f9b9d09007fadd69c238a028872b3da9576b4312e9c8c62");
ADD_CHECKPOINT(528000, "3cd4a55a83c640e550c65c4afe036838f89917326543f4108e23d8eabe7d567e");
ADD_CHECKPOINT(530000, "5507fcdc89a7d19c8f61ae4c4fecfde45db34cfd8f0f9017716bebf9f6bc3c6e");
ADD_CHECKPOINT(532000, "89d84033f6b4ae4197b689bd033015351c1076335667baf7e66fe80ae493df24");
ADD_CHECKPOINT(534000, "64d6d500e7503dfff7e91a96e5a36d2c764248045e108ec2f67a15e8689d2ddf");
ADD_CHECKPOINT(536000, "31b785bd373e1dc4f6bf23d2327abb184a2d000db5c2408a83929c36145f27c2");
ADD_CHECKPOINT(538000, "9afdc47a1f2ce1f15f3a59a1b3dcd05e51285b6b80fb79b3691da84613ebb5a0");
ADD_CHECKPOINT(540000, "36374ecce3296ef995edbc9df0b4a8767254a0c783a76621f12141fc0cd44284");
ADD_CHECKPOINT(542000, "3f4d45960ddac49bb40dd172cb241bde387bf317b80e542aa16d88bd169241bb");
ADD_CHECKPOINT(544000, "4825825fdba7753614d9cbd1543fa539e88e4b843f9ea451ca670e86c43fda22");
ADD_CHECKPOINT(546000, "134d183dec5ccec64d9f1802339137cb25aeb33c2dbd41c7351eac98f151fa0a");
ADD_CHECKPOINT(548000, "4103694d79cc9130f490fa4385dcdfea257c62e6e92e06b60ba394fc2c923999");
ADD_CHECKPOINT(550000, "d69fb0af0b69725fa5915bce6042e0808fdffe0e4db50d7dfb24037bb6f1f120");
ADD_CHECKPOINT(552000, "02f57d3e097fcee30e55e2223ccfbbcedd72d272abe1393e7ce875c0c16f0117");
ADD_CHECKPOINT(554000, "1fbf4aba5622334d7bb45353a97f289bb9f99bbca3f2631413b3e04425ebf208");
ADD_CHECKPOINT(556000, "975461166a280b15040fdf37ada9015ee9b0c3e5fb22d881cd9fe125e33dd070");
ADD_CHECKPOINT(558000, "8d2f2e98d9573ac717d8006904dfc53e38f0e7fd0fba65b99df478586663a3d9");
ADD_CHECKPOINT(560000, "b2f961bec1b9ad8fab7780980c1d8a1ab90c26fa949c7752418a4ea02d591a53");
ADD_CHECKPOINT(562000, "b4c4242fc89016842bfe05cb0516d166f21f66a1f233519ad406b83692e51412");
ADD_CHECKPOINT(564000, "a1c8bd41f6074d3838b5a9c40c0b27e986d73be9b99d771321af8b38d48a95e9");
ADD_CHECKPOINT(566000, "386d44deb956d361bd46d03038aacae599775bfc2845c012d23bf53309059eb6");
ADD_CHECKPOINT(568000, "fc5ec881f710207cd5d24abb8f079ac1a2ae86d3796d4ee0f59f98a1d775f578");
ADD_CHECKPOINT(570000, "14342e44e8cca54cad02677d714eb10bbd9a23f7bcca9f3cde487a7847cd5a08");
ADD_CHECKPOINT(572000, "9c942fa08c91faa149c7e744a0f4cfe719c163af9a56afbdd85dc5824eaee19b");
ADD_CHECKPOINT(574000, "3212ef203cc571275709aa062de34b9d022ef244813c6207efca410c8abd5db8");
ADD_CHECKPOINT(576000, "50840699bc720296fbd9b053c70335f32fd0334dfb613b87cd0895f4249da67b");
ADD_CHECKPOINT(578000, "3ee6f35dce31c6c2e8836573430596cc2096fecc0d5fde51af7ec886f8dc6f65");
ADD_CHECKPOINT(580000, "8e7533ef57f24a23e5b3038077e65c8430c7500b71735fdd8fc39be50d82f9ea");
ADD_CHECKPOINT(582000, "d555c9034ef71516d0bfa009965740522eec6154b6e355279cfe71624c826659");
ADD_CHECKPOINT(584000, "4b2d902f307739eed9af720e1d775174c4459c4b44b2f8c8e479d7434fa01c26");
ADD_CHECKPOINT(586000, "adf8dc1a544345ec2a83201af3ca2922e4852dc41f603f10fbb20a2137fa23e5");
ADD_CHECKPOINT(588000, "7f3ce0c1e03185d9bf04245ee30e25ae55bc26e9cbfeed5eaa1316343a82e6f9");
ADD_CHECKPOINT(590000, "2413ce20e18704ffb386ea1e671c9f2fc543f5a9e4a87fcc9ea600bdc8f900d3");
ADD_CHECKPOINT(592000, "1d4e38cfc713d0085b49c0c4ff8a0765563e5bb1391ebd3c7733f31cc1987477");
ADD_CHECKPOINT(594000, "49ed41f09c5a7441f4d4b3b4ed4879b88d3cf4d359d6baf36dca415dee4a9a64");
ADD_CHECKPOINT(596000, "6122ac078f9abc7a625e39050b41d861b18f77972b406cca49e81fdd4a313e68");
ADD_CHECKPOINT(598000, "75a84ff4ba79f6071aefdc80eafe23dcd198a08a18121c8ef879d45e053ff7b1");
ADD_CHECKPOINT(600000, "8c254c5593ae91c5c56aa245f7d5de6ab36ccba171f5663dd39b988e315e7fc7");
ADD_CHECKPOINT(602000, "0ae6a526fa338d050c66e6e550ab12e00c770160459df9142af73e9e423b9558");
ADD_CHECKPOINT(604000, "7013e8931d5ae274030ed87894999b782a115ba5a5322f8eee19d9fe14a51f29");
ADD_CHECKPOINT(606000, "2201c2235826e40147d9b86f217641b054017f553a6e162830c879971c2829de");

    return true;
  }

  bool checkpoints::load_checkpoints_from_json(const std::string &json_hashfile_fullpath)
  {
    boost::system::error_code errcode;
    if (! (boost::filesystem::exists(json_hashfile_fullpath, errcode)))
    {
      LOG_PRINT_L1("Blockchain checkpoints file not found");
      return true;
    }

    LOG_PRINT_L1("Adding checkpoints from blockchain hashfile");

    uint64_t prev_max_height = get_max_height();
    LOG_PRINT_L1("Hard-coded max checkpoint height is " << prev_max_height);
    t_hash_json hashes;
    if (!epee::serialization::load_t_from_json_file(hashes, json_hashfile_fullpath))
    {
      MERROR("Error loading checkpoints from " << json_hashfile_fullpath);
      return false;
    }
    for (std::vector<t_hashline>::const_iterator it = hashes.hashlines.begin(); it != hashes.hashlines.end(); )
    {
      uint64_t height;
      height = it->height;
      if (height <= prev_max_height) {
	LOG_PRINT_L1("ignoring checkpoint height " << height);
      } else {
	std::string blockhash = it->hash;
	LOG_PRINT_L1("Adding checkpoint height " << height << ", hash=" << blockhash);
	ADD_CHECKPOINT(height, blockhash);
      }
      ++it;
    }

    return true;
  }

  bool checkpoints::load_checkpoints_from_dns(network_type nettype)
  {
    std::vector<std::string> records;

    // All four ArQ-Net domains have DNSSEC on and valid
    static const std::vector<std::string> dns_urls = {

	};

    static const std::vector<std::string> testnet_dns_urls = {
    };

    static const std::vector<std::string> stagenet_dns_urls = {
    };

    if (!tools::dns_utils::load_txt_records_from_dns(records, nettype == TESTNET ? testnet_dns_urls : nettype == STAGENET ? stagenet_dns_urls : dns_urls))
      return true; // why true ?

    for (const auto& record : records)
    {
      auto pos = record.find(":");
      if (pos != std::string::npos)
      {
        uint64_t height;
        crypto::hash hash;

        // parse the first part as uint64_t,
        // if this fails move on to the next record
        std::stringstream ss(record.substr(0, pos));
        if (!(ss >> height))
        {
    continue;
        }

        // parse the second part as crypto::hash,
        // if this fails move on to the next record
        std::string hashStr = record.substr(pos + 1);
        if (!epee::string_tools::parse_tpod_from_hex_string(hashStr, hash))
        {
    continue;
        }

        ADD_CHECKPOINT(height, hashStr);
      }
    }
    return false;
  }

  bool checkpoints::load_new_checkpoints(const std::string &json_hashfile_fullpath, network_type nettype, bool dns)
  {
    bool result;

    result = load_checkpoints_from_json(json_hashfile_fullpath);
    if (dns)
    {
      result &= load_checkpoints_from_dns(nettype);
    }

    return result;
  }
}
